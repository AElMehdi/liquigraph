#!/bin/sh

MYSELF=`which "$0" 2>/dev/null`
[ $? -gt 0 -a -f "$0" ] && MYSELF="./$0"

BASEDIR=`dirname $0`/..
BASEDIR=`(cd "$BASEDIR"; pwd)`
FOLDER=''
PROCESSED=''

ARGS=`getopt -o 'hc:g:u:p:d:' --long 'help,changelog:,graph-db-uri:,username,password,dry-run-output-directory:' -n 'liquigraph' -- "$@"`
eval set -- ${ARGS}
while true ; do
    case "$1" in
        -h|--help)
            exec java -jar "${MYSELF}" --help;
            exit 0 ;;
        -c|--changelog)
            FOLDER=`dirname "$2"`
            file=`basename "$2"`
            PROCESSED="$PROCESSED --changelog $file"
            shift 2 ;;
        -g|--graph-db-uri)
            PROCESSED="$PROCESSED --graph-db-uri $2"
            shift 2 ;;
        -u|--username)
            PROCESSED="$PROCESSED --username $2"
            shift 2 ;;
        -p|--password)
            PROCESSED="$PROCESSED --password"
            shift 1 ;;
        -d|--dry-run-output-directory)
            PROCESSED="$PROCESSED --dry-run-output-directory $2"
            shift 2 ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done


# OS specific support.  $var _must_ be set to either true or false.
CLASSPATH=".:${MYSELF}:${FOLDER}"
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if ${cygwin} ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

# For Cygwin, switch paths to Windows format before running java
if ${cygwin}; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
fi

exec "$JAVACMD" -classpath "$CLASSPATH" org.liquigraph.cli.LiquigraphCli ${PROCESSED}
